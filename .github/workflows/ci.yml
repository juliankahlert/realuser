name: RealUser CI

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@52753b7da854d5c07df37391a986c76ab4615999
        with:
          ruby-version: '3.0'

      - name: Install Dependencies
        run: |
          gem install bundler
          bundle install

      - name: Check Formating
        run: |
          rufo -c lib/

      - name: test & Publish Code Coverage to Code Climate
        uses: paambaati/codeclimate-action@f429536ee076d758a24705203199548125a28ca7
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: bundle exec rspec
          coverageLocations: |
            ${{github.workspace}}/coverage/cov*.xml:cobertura

      - name: Report Coverage to Codacy
        run: |
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report -r coverage/coverage.xml
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@52753b7da854d5c07df37391a986c76ab4615999
        with:
          ruby-version: '3.0'

      - name: Install dependencies
        run: |
          gem install bundler
          bundle install

      - name: Build the gem
        run: make

      - name: Install the gem
        run: sudo make install

      - name: Save gem as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: realuser-gem
          path: 'realuser-*.gem'

      - name: Build Documentation
        run: yard doc

      - name: Setup Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v5

      - name: Upload Documentation
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./doc"

  deploy-doc:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

